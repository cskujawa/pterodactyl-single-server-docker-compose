##buffer policy
client_body_buffer_size 1K;
client_header_buffer_size 3k;
client_max_body_size 2k;
large_client_header_buffers 2 1k;

# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
default Upgrade;
'' close;
}

# SUBDOMAIN ROUTING FOR PANEL
server {
	listen 80;
	error_log  /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;
	server_name panel.good-spiders.com;

	if ($request_method !~ ^(GET|HEAD|POST|OPTIONS|DELETE)$ ) {
		return 405;
	}

	if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
		return 403;
	}

	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}

	location / {
		return 301 https://panel.good-spiders.com$request_uri;
	}
}

server {
	listen 443 ssl;
	server_name panel.good-spiders.com;
	error_log  /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;
	root /var/www/pterodactyl/public;
	index index.php index.html;

	# allow larger file uploads and longer script runtimes
    client_max_body_size 100m;
    client_body_timeout 120s;

	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;

	if ($request_method !~ ^(GET|HEAD|POST|OPTIONS|DELETE)$ ) {
		return 405;
	}

	if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
		return 403;
	}

	location = /error.html {
		ssi on;
		internal;
		auth_basic off;
		root /usr/share/nginx/html;
	}

	location / {
		add_header Access-Control-Request-Private-Network "true";
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods "GET, POST, PATCH, PUT, DELETE, OPTIONS";
		add_header Access-Control-Allow-Headers "Authorization, Origin, Content-Type, X-Auth-Token";
		add_header Access-Control-Max-Age "86400";
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;
        proxy_set_header X-NginX-Proxy true;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		auth_request_set $token $upstream_http_x_auth_request_access_token;
      	add_header 'Authorization' $token;
		proxy_redirect off;
		proxy_buffering off;
		proxy_request_buffering off;
		add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
		add_header X-Content-Type-Options nosniff;
    	add_header X-XSS-Protection "1; mode=block";
    	add_header X-Robots-Tag none;
    	add_header Content-Security-Policy "frame-ancestors 'self'";
    	add_header X-Frame-Options DENY;
    	add_header Referrer-Policy same-origin;
		proxy_pass https://panel;
	}

	# Remove favicon notifications.
	location = /favicon.ico {
		log_not_found off;
	}
}

# SUBDOMAIN ROUTING FOR WINGS
# This server block catches requests to 8083 which were being missed and passes them through 443
server {
	listen 8083 ssl;
	server_name wings.good-spiders.com;
	error_log  /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;

	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	# allow larger file uploads and longer script runtimes
    client_max_body_size 100m;
    client_body_timeout 120s;

	error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;

	if ($request_method !~ ^(GET|HEAD|POST|OPTIONS|DELETE)$ ) {
		return 405;
	}

	if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
		return 403;
	}

	location = /error.html {
		ssi on;
		internal;
		auth_basic off;
		root /usr/share/nginx/html;
	}
	
	location / {
		if ($request_method = OPTIONS ) {
			add_header Access-Control-Request-Private-Network "true";
			add_header Access-Control-Allow-Origin "https://panel.good-spiders.com";
			add_header Access-Control-Allow-Methods "GET, POST, PATCH, PUT, DELETE, OPTIONS";
			add_header Access-Control-Allow-Headers "Authorization, Origin, Content-Type, X-Auth-Token";
			add_header Content-Length 0;
			add_header Content-Type text/plain;
			return 200;
		}
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $http_connection;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;
        proxy_set_header X-NginX-Proxy true;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_redirect off;
		proxy_buffering off;
		proxy_request_buffering off;
        proxy_pass http://wings:8083;
	}
}